import 'package:flutter/material.dart';

void main() => runApp(MyApp());

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Rocket Launch Controller',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: CounterWidget(),
    );
  }
}

class CounterWidget extends StatefulWidget {
  @override
  _CounterWidgetState createState() => _CounterWidgetState();
}

class _CounterWidgetState extends State<CounterWidget> {
  int _counter = 0;
  final int _maxValue = 100;

  // Method to increment counter
  void _incrementCounter() {
    setState(() {
      if (_counter < _maxValue) {
        _counter++;
        if (_counter == _maxValue) {
          _showLiftoffDialog();
        }
      }
    });
  }

  // Method to decrement counter
  void _decrementCounter() {
    setState(() {
      if (_counter > 0) {
        _counter--;
      }
    });
  }

  // Method to reset counter
  void _resetCounter() {
    setState(() {
      _counter = 0;
    });
  }

  // Method to get color based on counter value
  Color _getCounterColor() {
    if (_counter == 0) {
      return Colors.red;
    } else if (_counter > 50) {
      return Colors.green;
    } else {
      return Colors.orange;
    }
  }

  // Method to show liftoff dialog (Bonus Mission)
  void _showLiftoffDialog() {
    showDialog(
      context: context,
      builder: (BuildContext context) {
        return AlertDialog(
          title: Text(
            'ðŸš€ LIFTOFF! ðŸš€',
            style: TextStyle(
              fontSize: 24,
              fontWeight: FontWeight.bold,
              color: Colors.green,
            ),
            textAlign: TextAlign.center,
          ),
          content: Column(
            mainAxisSize: MainAxisSize.min,
            children: [
              Icon(
                Icons.rocket_launch,
                size: 80,
                color: Colors.orange,
              ),
              SizedBox(height: 20),
              Text(
                'Mission Successful!\nThe rocket has launched! ðŸŽ‰',
                style: TextStyle(fontSize: 18),
                textAlign: TextAlign.center,
              ),
            ],
          ),
          actions: [
            TextButton(
              onPressed: () {
                Navigator.of(context).pop();
                _resetCounter(); // Reset after successful launch
              },
              child: Text('Launch Another Rocket'),
            ),
          ],
        );
      },
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('ðŸš€ Rocket Launch Controller'),
        backgroundColor: Colors.blue,
      ),
      body: Padding(
        padding: const EdgeInsets.all(20.0),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            // Mission Status Header
            Container(
              padding: EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.grey[100],
                borderRadius: BorderRadius.circular(12),
                border: Border.all(color: Colors.grey[300]!),
              ),
              child: Column(
                children: [
                  Text(
                    'MISSION CONTROL',
                    style: TextStyle(
                      fontSize: 20,
                      fontWeight: FontWeight.bold,
                      color: Colors.blue[800],
                    ),
                  ),
                  SizedBox(height: 8),
                  Text(
                    _counter == _maxValue 
                        ? 'ðŸš€ LIFTOFF ACHIEVED! ðŸš€'
                        : 'Fuel Level: ${_counter}/${_maxValue}',
                    style: TextStyle(
                      fontSize: 16,
                      color: _counter == _maxValue ? Colors.green : Colors.grey[600],
                      fontWeight: _counter == _maxValue ? FontWeight.bold : FontWeight.normal,
                    ),
                  ),
                ],
              ),
            ),

            SizedBox(height: 30),

            // Counter Display with dynamic color
            Center(
              child: Container(
                padding: EdgeInsets.all(20),
                decoration: BoxDecoration(
                  color: _getCounterColor().withOpacity(0.1),
                  borderRadius: BorderRadius.circular(15),
                  border: Border.all(color: _getCounterColor(), width: 3),
                ),
                child: Text(
                  _counter == _maxValue ? 'LIFTOFF!' : '$_counter',
                  style: TextStyle(
                    fontSize: 50.0,
                    fontWeight: FontWeight.bold,
                    color: _getCounterColor(),
                  ),
                ),
              ),
            ),

            SizedBox(height: 30),

            // Slider
            Container(
              padding: EdgeInsets.symmetric(horizontal: 20),
              child: Column(
                children: [
                  Text(
                    'Fuel Adjustment',
                    style: TextStyle(fontSize: 16, fontWeight: FontWeight.w600),
                  ),
                  Slider(
                    min: 0,
                    max: _maxValue.toDouble(),
                    value: _counter.toDouble(),
                    onChanged: (double value) {
                      setState(() {
                        int newValue = value.toInt();
                        if (newValue == _maxValue && _counter != _maxValue) {
                          _counter = newValue;
                          _showLiftoffDialog();
                        } else {
                          _counter = newValue;
                        }
                      });
                    },
                    activeColor: Colors.blue,
                    inactiveColor: Colors.red,
                    divisions: _maxValue,
                    label: '$_counter',
                  ),
                ],
              ),
            ),

            SizedBox(height: 30),

            // Control Buttons
            Wrap(
              spacing: 15,
              runSpacing: 15,
              alignment: WrapAlignment.center,
              children: [
                // Ignite Button
                ElevatedButton.icon(
                  onPressed: _counter < _maxValue ? _incrementCounter : null,
                  icon: Icon(Icons.add_circle),
                  label: Text('IGNITE (+1)'),
                  style: ElevatedButton.styleFrom(
                    backgroundColor: Colors.green,
                    foregroundColor: Colors.white,
                    padding: EdgeInsets.symmetric(horizontal: 20, vertical: 12),
                  ),
                ),

                // Abort/Decrement Button
                ElevatedButton.icon(
                  onPressed: _counter > 0 ? _decrementCounter : null,
                  icon: Icon(Icons.remove_circle),
                  label: Text('ABORT (-1)'),
                  style: ElevatedButton.styleFrom(
                    backgroundColor: Colors.orange,
                    foregroundColor: Colors.white,
                    padding: EdgeInsets.symmetric(horizontal: 20, vertical: 12),
                  ),
                ),

                // Reset Button
                ElevatedButton.icon(
                  onPressed: _counter > 0 ? _resetCounter : null,
                  icon: Icon(Icons.refresh),
                  label: Text('RESET'),
                  style: ElevatedButton.styleFrom(
                    backgroundColor: Colors.red,
                    foregroundColor: Colors.white,
                    padding: EdgeInsets.symmetric(horizontal: 20, vertical: 12),
                  ),
                ),
              ],
            ),

            SizedBox(height: 30),

            // Status Indicator
            Container(
              padding: EdgeInsets.all(12),
              decoration: BoxDecoration(
                color: _getCounterColor().withOpacity(0.1),
                borderRadius: BorderRadius.circular(8),
                border: Border.all(color: _getCounterColor()),
              ),
              child: Row(
                mainAxisSize: MainAxisSize.min,
                children: [
                  Icon(
                    _counter == 0 
                        ? Icons.warning 
                        : _counter == _maxValue 
                            ? Icons.rocket_launch 
                            : Icons.battery_charging_full,
                    color: _getCounterColor(),
                  ),
                  SizedBox(width: 8),
                  Text(
                    _counter == 0 
                        ? 'SYSTEM OFFLINE' 
                        : _counter == _maxValue 
                            ? 'LAUNCH READY!' 
                            : 'FUELING IN PROGRESS',
                    style: TextStyle(
                      color: _getCounterColor(),
                      fontWeight: FontWeight.bold,
                    ),
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
    );
  }
}
